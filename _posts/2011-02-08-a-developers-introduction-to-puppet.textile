---
layout: post
title: A Developer's Introduction to Puppet
date: 2011-02-08
---
!(right)/public/images/sock-puppet.jpg(Puppet)!

"Puppet":http://www.puppetlabs.com/puppet/introduction/ is one of those things most Rubyists have probably heard of, but few know very well. I've recently started using it in conjunction with Vagrant and found myself wanting a consolidated explanation of it's components. So, here it is!

h3. Nodes

A node represents a specific type of machine. It defines how, and with what, that type of server gets provisioned. Examples nodes would be like a web server, a mail server or an LDAP server.

h3. Modules

Puppet modules are much like Ruby modules. They're an organization tool which DRYs up your Puppet configs. Modules contain Classes, Templates, Files, etc. The Puppet site explains it well:

bq. Modules are reusable, sharable units of Puppet code. They can automate tasks such as setting up a database, web server, or mail server.

h3. Classes

Classes are the actual unit you can include into _nodes_ or even other classes. Classes support a simplified type of inheritance. Say you want to use nginx as a web server one place, but as a proxy another. You'd have a base class, <code>nginx</code>, then a <code>nginx::proxy</code> class which modifies the base to act as a proxy server.

h3. Resources

Resources are what classes contain. They're a single item that is part of the overall configuration of a class. Take our <code>nginx</code> example above, to provision nginx on a machine we need a couple things. We need to ensure the package is installed, we want to make sure the service is running and we'd like to define a custom <code>nginx.conf</code>. These would all be resource definitions.

h3. Templates

Templates are any file you want to put on the machine being provisioned. This can range from a <code>nginx.conf</code> file to <code>/etc/hosts</code>. You can include dynamic data by specifying class variables in your.. you guessed it, classes! These files are just _erb_ so any normal Ruby goes.

h3. Just the Surface

This is a very, very basic overview of Puppet. It's an extremely powerful platform that can really make your life easier. I didn't cover any examples of the Puppet DSL on purpose, I want this to just be a basic primer to Puppet's concepts.

Check out "Puppet Labs' Documentation":http://docs.puppetlabs.com/ for more information. Also, take a look into their "Module Forge":http://forge.puppetlabs.com/ for preexisting modules you can use right now, with barely any work.

